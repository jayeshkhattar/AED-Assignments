/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import data.CreateData;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Encounter;
import model.EncounterHistory;
import model.Patient;
import model.PatientDirectory;
import model.VitalSigns;

/**
 *
 * @author abc
 */
public class ManageJPanel extends javax.swing.JPanel {

    PatientDirectory patientDirectory;
    List<EncounterHistory> encounterHistoryList; 
    Map<String, EncounterHistory> encMap;
    int index;
    Patient patient;
    
    /**
     * Creates new form ManageJPanel
     */
    public ManageJPanel(PatientDirectory patientDirectory, List<EncounterHistory> ethlist) {
        initComponents();
        this.patientDirectory = patientDirectory;
        btnSubmit.setEnabled(false);
        jPanel3.setVisible(false);
        btnClose.setEnabled(false);
        CreateData cd = new CreateData();
        this.encounterHistoryList = cd.createEncounters(patientDirectory.getPatientList());
        
        encMap = new HashMap<String, EncounterHistory>();
        for(EncounterHistory eh : encounterHistoryList) {
            encMap.put(eh.getPatient().getPatientNumber(), eh);
            System.out.println(eh.getPatient().getPatientNumber());
            System.out.println(eh.getEncounterList().get(0).getDepartment());
        }
        populateDataOnTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        btnViewPatient = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        patientList = new javax.swing.JTable();
        btnAddEncounter = new javax.swing.JButton();
        jPanelEditPatient = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblPersonInfo = new javax.swing.JLabel();
        lblDob = new javax.swing.JLabel();
        lblTelephone = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblSSN = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtSSN = new javax.swing.JTextField();
        lblHealthPlanNo = new javax.swing.JLabel();
        txtHealthPlanNo = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        dob = new com.toedter.calendar.JDateChooser();
        lblHouseAdd = new javax.swing.JLabel();
        combCity = new javax.swing.JComboBox<>();
        lblCommunity = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        combCommunity = new javax.swing.JComboBox<>();
        combHouseAdd = new javax.swing.JComboBox<>();
        addEncounter = new javax.swing.JScrollPane();
        encounterTable = new javax.swing.JTable();
        btnClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanelAddEncounter = new javax.swing.JPanel();
        lblPatientNo = new javax.swing.JLabel();
        patientNoRead = new javax.swing.JTextField();
        lblEncounterDate = new javax.swing.JLabel();
        encounterDate = new com.toedter.calendar.JDateChooser();
        lblVisit = new javax.swing.JLabel();
        lblDepartment = new javax.swing.JLabel();
        combVisitType = new javax.swing.JComboBox<>();
        combDepartment = new javax.swing.JComboBox<>();
        lblVitalSigns = new javax.swing.JLabel();
        lblBodyTemp = new javax.swing.JLabel();
        lblBPHigh = new javax.swing.JLabel();
        lblRespirationRate = new javax.swing.JLabel();
        lblBPLow = new javax.swing.JLabel();
        spinTemp = new com.toedter.components.JSpinField();
        spinBPHigh = new com.toedter.components.JSpinField();
        spinRespiration = new com.toedter.components.JSpinField();
        spinBPLow = new com.toedter.components.JSpinField();
        btnSaveEncounter = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        patientList1 = new javax.swing.JTable();
        btnBPRange = new javax.swing.JButton();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnViewPatient.setText("View");
        btnViewPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientActionPerformed(evt);
            }
        });
        jPanel1.add(btnViewPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 360, -1, -1));

        patientList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Patient #", "Patient Name", "Joining Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(patientList);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 38, 480, 306));

        btnAddEncounter.setText("Add Encounter");
        btnAddEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEncounterActionPerformed(evt);
            }
        });
        jPanel1.add(btnAddEncounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(977, 364, -1, -1));

        lblName.setText("Name*:");
        lblName.setToolTipText("Name");
        lblName.setAlignmentX(0.5F);

        lblPersonInfo.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblPersonInfo.setText("View/Edit Patient Information");

        lblDob.setText("Date of Birth*:");
        lblDob.setToolTipText("");
        lblDob.setAlignmentX(0.5F);

        lblTelephone.setText("Telephone*:");
        lblTelephone.setToolTipText("");
        lblTelephone.setAlignmentX(0.5F);

        lblEmail.setText("Email Address*:");
        lblEmail.setToolTipText("");
        lblEmail.setAlignmentX(0.5F);

        lblSSN.setText("Social Security #:");
        lblSSN.setToolTipText("");
        lblSSN.setAlignmentX(0.5F);

        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        lblHealthPlanNo.setText("Health plan beneficiary #:");
        lblHealthPlanNo.setToolTipText("");
        lblHealthPlanNo.setAlignmentX(0.5F);

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblHouseAdd.setText("House Address:");

        lblCommunity.setText("Community:");

        lblState.setText("State:");

        javax.swing.GroupLayout jPanelEditPatientLayout = new javax.swing.GroupLayout(jPanelEditPatient);
        jPanelEditPatient.setLayout(jPanelEditPatientLayout);
        jPanelEditPatientLayout.setHorizontalGroup(
            jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEditPatientLayout.createSequentialGroup()
                .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelEditPatientLayout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(lblPersonInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelEditPatientLayout.createSequentialGroup()
                        .addComponent(lblState)
                        .addGap(238, 238, 238)
                        .addComponent(btnSubmit))
                    .addGroup(jPanelEditPatientLayout.createSequentialGroup()
                        .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanelEditPatientLayout.createSequentialGroup()
                                .addComponent(lblHouseAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(combHouseAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanelEditPatientLayout.createSequentialGroup()
                                    .addGap(173, 173, 173)
                                    .addComponent(combCity, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelEditPatientLayout.createSequentialGroup()
                                    .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblTelephone)
                                        .addComponent(lblHealthPlanNo)
                                        .addComponent(lblName))
                                    .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanelEditPatientLayout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                                                .addComponent(txtPhone)))
                                        .addGroup(jPanelEditPatientLayout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtHealthPlanNo, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))))))
                        .addGap(30, 30, 30)
                        .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSSN)
                            .addComponent(lblDob)
                            .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblCommunity)
                                .addComponent(lblEmail)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmail)
                            .addComponent(txtSSN)
                            .addComponent(dob, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(combCommunity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanelEditPatientLayout.setVerticalGroup(
            jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEditPatientLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(lblPersonInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDob)
                        .addComponent(lblName))
                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSSN)
                    .addComponent(lblTelephone)
                    .addComponent(txtPhone)
                    .addComponent(txtSSN))
                .addGap(18, 18, 18)
                .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(lblHealthPlanNo)
                    .addComponent(txtHealthPlanNo)
                    .addComponent(txtEmail))
                .addGap(18, 18, 18)
                .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblState)
                    .addComponent(lblCommunity))
                .addGap(18, 18, 18)
                .addGroup(jPanelEditPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHouseAdd)
                    .addComponent(combHouseAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(btnSubmit)
                .addGap(265, 265, 265))
        );

        jPanel1.add(jPanelEditPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 464, -1, 350));

        encounterTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Encounter", "Visit Type", "Department", "Body Temprature", "Respiration Rate", "Blood Pressure High", "Blood Pressure Low"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        addEncounter.setViewportView(encounterTable);

        jPanel1.add(addEncounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 40, 555, 308));

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jPanel1.add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 360, -1, -1));

        lblPatientNo.setText("Patient #");

        patientNoRead.setEditable(false);

        lblEncounterDate.setText("Encounter Date");

        lblVisit.setText("Visit Type");

        lblDepartment.setText("Department");

        combVisitType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "First Visit", "Follow Up" }));

        combDepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Outpatient department (OPD)", "Inpatient Service (IP)", "Medical", "Nursing", "Paramedical", "Physical Medicine & Rehabilitation", "Operation Theatre Complex (OT)", "Pharmacy", "Radiology" }));

        lblVitalSigns.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        lblVitalSigns.setText("Vital Signs");

        lblBodyTemp.setText("Body Temperature");

        lblBPHigh.setText("Blood Presssure High");

        lblRespirationRate.setText("Respiration Rate");

        lblBPLow.setText("Blood Pressure Low");

        btnSaveEncounter.setText("Save");
        btnSaveEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveEncounterActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel1.setText("Add Encounter");

        javax.swing.GroupLayout jPanelAddEncounterLayout = new javax.swing.GroupLayout(jPanelAddEncounter);
        jPanelAddEncounter.setLayout(jPanelAddEncounterLayout);
        jPanelAddEncounterLayout.setHorizontalGroup(
            jPanelAddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(jPanelAddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRespirationRate)
                    .addComponent(lblBodyTemp)
                    .addComponent(lblBPHigh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblBPLow))
                .addGap(122, 122, 122)
                .addGroup(jPanelAddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spinTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinRespiration, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinBPHigh, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinBPLow, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAddEncounterLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSaveEncounter)
                .addGap(202, 202, 202))
            .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                .addGroup(jPanelAddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(lblVitalSigns))
                    .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(lblDepartment)
                        .addGap(73, 73, 73)
                        .addComponent(combDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(lblVisit)
                        .addGap(180, 180, 180)
                        .addComponent(combVisitType, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(lblEncounterDate)
                        .addGap(180, 180, 180)
                        .addComponent(encounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(jPanelAddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                                .addComponent(lblPatientNo)
                                .addGap(180, 180, 180)
                                .addComponent(patientNoRead, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(jLabel1)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelAddEncounterLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblBPLow, lblBodyTemp, lblRespirationRate});

        jPanelAddEncounterLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {spinBPHigh, spinBPLow, spinRespiration, spinTemp});

        jPanelAddEncounterLayout.setVerticalGroup(
            jPanelAddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addGroup(jPanelAddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblPatientNo))
                    .addComponent(patientNoRead, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addGroup(jPanelAddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblEncounterDate))
                    .addComponent(encounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelAddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblVisit))
                    .addComponent(combVisitType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelAddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDepartment)
                    .addComponent(combDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblVitalSigns)
                .addGap(12, 12, 12)
                .addGroup(jPanelAddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                        .addGroup(jPanelAddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(lblBodyTemp))
                            .addComponent(spinTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanelAddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblRespirationRate))
                            .addComponent(spinRespiration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelAddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(spinBPHigh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelAddEncounterLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lblBPHigh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(lblBPLow))
                    .addComponent(spinBPLow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSaveEncounter)
                .addGap(135, 135, 135))
        );

        jPanelAddEncounterLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblBPLow, lblBodyTemp, lblRespirationRate});

        jPanelAddEncounterLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {spinBPHigh, spinBPLow, spinRespiration, spinTemp});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanelAddEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanelAddEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel2);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 420, 510, 550));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setText("List of Patients having Abnormal BP");

        jLabel3.setText("Normal Range - 80/120");

        patientList1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient #", "Patient Name", "High BP", "Low BP"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(patientList1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(80, 80, 80)
                            .addComponent(jLabel2))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(130, 130, 130)
                            .addComponent(jLabel3))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 466, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(48, 48, 48)
                    .addComponent(jLabel3)
                    .addGap(74, 74, 74)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 570, 380));

        btnBPRange.setText("List out of Range BP");
        btnBPRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBPRangeActionPerformed(evt);
            }
        });
        jPanel1.add(btnBPRange, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, -1));

        jScrollPane3.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1141, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1042, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientActionPerformed
        int rowIndex = patientList.getSelectedRow();
        if(rowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a patient record to view.");
        }
        else {
            setEnableValues(true, false, true, true);
            DefaultTableModel model = (DefaultTableModel) patientList.getModel();
            index = rowIndex;
            patient = (Patient) model.getValueAt(rowIndex, 0);
            txtName.setText(patient.getName());
            java.util.Date date = java.sql.Date.valueOf(patient.getDob());
            dob.setDate(date);
            txtPhone.setText(String.valueOf(patient.getPhone()));
            txtSSN.setText(String.valueOf(patient.getSsn()));
            txtHealthPlanNo.setText(patient.getHealthPlanNumber());
            txtEmail.setText(patient.getEmail());
            combCity.setSelectedItem(String.valueOf(patient.getHouse().getCommunity().getCity()));
            combHouseAdd.setSelectedItem(String.valueOf(patient.getHouse()));
            combCommunity.setSelectedItem(patient.getHouse().getCommunity());
            txtName.setEditable(false);
            dob.setEnabled(false);
            txtPhone.setEditable(false);
            txtSSN.setEditable(false);
            txtHealthPlanNo.setEditable(false);
            txtEmail.setEditable(false);
            combCity.setEditable(false);
            combHouseAdd.setEditable(false);
            combCommunity.setEditable(false);
            btnClose.setEnabled(true);
            populateEncounterData(patient.getPatientNumber());
        }
    }//GEN-LAST:event_btnViewPatientActionPerformed

    private void btnAddEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEncounterActionPerformed
        jScrollPane1.setVisible(true);  
        patientNoRead.setEnabled(false);
        patientNoRead.setText(patient.getPatientNumber());
    }//GEN-LAST:event_btnAddEncounterActionPerformed

    private void btnSaveEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveEncounterActionPerformed
        Date ecDate = encounterDate.getDate();
        String visit = (String) combVisitType.getSelectedItem();
        String dept = (String) combDepartment.getSelectedItem();
        int temp = spinTemp.getValue();
        int resp = spinRespiration.getValue();
        int bph = spinBPHigh.getValue();
        int bpl = spinBPLow.getValue();
        
        VitalSigns vs = new VitalSigns(temp, resp, bph, bpl);
               
        Encounter encounter = new Encounter(ecDate, dept, visit, vs);
        
        EncounterHistory ec = encMap.get(patient.getPatientNumber());
        ec.getEncounterList().add(encounter);
        
        
        encMap.put(patient.getPatientNumber(), ec);
        populateEncounterData(patient.getPatientNumber());
        jScrollPane1.setEnabled(false);
    }//GEN-LAST:event_btnSaveEncounterActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed

    }//GEN-LAST:event_txtEmailActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
            btnClose.setEnabled(false);
            setEnableValues(false, false, false, false);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnBPRangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBPRangeActionPerformed
        jPanel3.setVisible(true);
        btnClose.setEnabled(false);
        setEnableValues(false, false, false, false);
        DefaultTableModel model = (DefaultTableModel) patientList1.getModel();
        model.setRowCount(0);
//        EncounterHistory eh = encMap.get(patientNumber);
        Map<String, String> patientMap = new HashMap<String, String>();
        for(Patient p : patientDirectory.getPatientList()) {
            patientMap.put(p.getPatientNumber(),p.getName());
        }
        
        for(String pnum : encMap.keySet()) {
            boolean added = false;
            Object[] obj = new Object[4];
            obj[0] = pnum;
            obj[1] = patientMap.get(pnum);
            List<Encounter> eclist = encMap.get(pnum).getEncounterList();
            for(Encounter e : encMap.get(pnum).getEncounterList()) {
                if(e.getVitalSign().getBloodPressureHigh()>120 || e.getVitalSign().getBloodPressureLow()<80)
                    obj[2] = e.getVitalSign().getBloodPressureHigh();
                    obj[3] = e.getVitalSign().getBloodPressureLow();
                    model.addRow(obj);
                    added = true;
                    break;
            }
            if(added == true)
                continue;
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBPRangeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane addEncounter;
    private javax.swing.JButton btnAddEncounter;
    private javax.swing.JButton btnBPRange;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSaveEncounter;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnViewPatient;
    private javax.swing.JComboBox<String> combCity;
    private javax.swing.JComboBox<String> combCommunity;
    private javax.swing.JComboBox<String> combDepartment;
    private javax.swing.JComboBox<String> combHouseAdd;
    private javax.swing.JComboBox<String> combVisitType;
    private com.toedter.calendar.JDateChooser dob;
    private com.toedter.calendar.JDateChooser encounterDate;
    private javax.swing.JTable encounterTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelAddEncounter;
    private javax.swing.JPanel jPanelEditPatient;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblBPHigh;
    private javax.swing.JLabel lblBPLow;
    private javax.swing.JLabel lblBodyTemp;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEncounterDate;
    private javax.swing.JLabel lblHealthPlanNo;
    private javax.swing.JLabel lblHouseAdd;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPatientNo;
    private javax.swing.JLabel lblPersonInfo;
    private javax.swing.JLabel lblRespirationRate;
    private javax.swing.JLabel lblSSN;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblTelephone;
    private javax.swing.JLabel lblVisit;
    private javax.swing.JLabel lblVitalSigns;
    private javax.swing.JTable patientList;
    private javax.swing.JTable patientList1;
    private javax.swing.JTextField patientNoRead;
    private com.toedter.components.JSpinField spinBPHigh;
    private com.toedter.components.JSpinField spinBPLow;
    private com.toedter.components.JSpinField spinRespiration;
    private com.toedter.components.JSpinField spinTemp;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHealthPlanNo;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSSN;
    // End of variables declaration//GEN-END:variables

    private void populateDataOnTable() {
        DefaultTableModel model = (DefaultTableModel) patientList.getModel();
        model.setRowCount(0);

        for(Patient c : patientDirectory.getPatientList()) {
            model = createPatient(model, c);
        }
        setEnableValues(false, false, false, false);
    }

    public void setEnableValues(boolean editPanel, boolean addEncounter1, boolean encounterTb, boolean addButton) {
        jPanelEditPatient.setVisible(editPanel);
        jScrollPane1.setVisible(addEncounter1);
        addEncounter.setVisible(encounterTb);
        btnAddEncounter.setVisible(addButton);        
    }

    private DefaultTableModel createPatient(DefaultTableModel model, Patient p) {
        Object[] obj = new Object[3];
        obj[0] = p;
        obj[1] = p.getName();
        obj[2] = p.getJoiningDate();
        model.addRow(obj);
        return model;
    }
    
    private void populateEncounterData(String patientNumber) {
        DefaultTableModel model = (DefaultTableModel) encounterTable.getModel();
        model.setRowCount(0);
        EncounterHistory eh = encMap.get(patientNumber);
        System.out.println("---333--"+patientNumber);
        System.out.println("--12-"+eh);
        for(Encounter e : eh.getEncounterList()) {
            model = createEncounter(model, e);
        }
    }
            
    private DefaultTableModel createEncounter(DefaultTableModel model, Encounter e) {
        Object[] obj = new Object[7];
        obj[0] = e;
        obj[1] = e.getVisitType();
        obj[2] = e.getDepartment();
        obj[3] = e.getVitalSign().getBodyTemperature();
        obj[4] = e.getVitalSign().getRespirationRate();
        obj[5] = e.getVitalSign().getBloodPressureHigh();
        obj[6] = e.getVitalSign().getBloodPressureLow();
        model.addRow(obj);
        return model;
    }
}